{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAACpB,IAEGqB,EDlB2BK,CAAc1B,GAAlCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEfnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAQ9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,UCjBvC8B,IAASC,OAAQ,kBAAC,EAAD,MACfC,SAASC,eAAe,U","file":"static/js/main.773d0d0f.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=DaMF2PVKXKHQtfs5wlWY8pNqpVnbz8Co`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({ title, url } ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    );\n};\n","import React from 'react';\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\nimport {GifGridItem} from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n\n};\n","import {useState, useEffect} from 'react';\nimport {getGifs} from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then( imgs => {\n\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n\n            })\n\n    }, [category])\n\n    return state; //data[]; loading: true\n}\n","import React, {useState} from 'react';\nimport {AddCategory} from \"./components/AddCategory\";\nimport {GifGrid} from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd = () => {\n    //     setCategories( cats => [...categories, 'HunterXHunter'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\n\nReactDOM.render( <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}